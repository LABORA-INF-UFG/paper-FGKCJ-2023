[General]
seed-set = ${runnumber}

[Maior]
#seed-set = 1
#repeat = 2
network = Maior
sim-time-limit = 0.5s
*.np_vdu4=${interval = 1..20 step 1}
*.np_vdu1=80
*.np_vdu2=60
*.np_vdu3=40
#*.np_vdu4=20
cmdenv-performance-display = false
cmdenv-express-mode = true
record-eventlog = false
#**.statistic-recording = true
**.m**.**.statistic-recording = false
**.Q**.**.statistic-recording = false
**.p**.**.statistic-recording = false
**.L**.**.statistic-recording = false
**.S**.**.statistic-recording = false
**.b**.**.statistic-recording = false
**.s**.**.statistic-recording = false
**.c**.**.statistic-recording = false
**.d**.**.statistic-recording = false
**.t**.**.statistic-recording = false
**.X**.**.statistic-recording = false
**.CU*_eMBB_*.**.statistic-recording = false
**.CU**.packetLengths.statistic-recording = false
**.CU**.packetJitter.statistic-recording = false
**.CU**.packetDelayDifferenceToMean.statistic-recording = false
**.CU**.packetDelayVariation.statistic-recording = false
**.CU**.droppedPacketLengths.statistic-recording = false
**.CU**.droppedDataRate.statistic-recording = false
**.CU**.dataRate.statistic-recording = false
**.CU**.meanBitLifeTimePerPacket.statistic-recording = false
*.t{1,3}du*[*].generationInterval = 0.001 s
*.t{1,3}du*[*].numTokens = 1
###------Bucket Settings---------##
*.b{1,3}du*[*].queue.packetCapacity = 10
*.b{1,3}du*[*].server.initialNumTokens = 2
*.b{1,3}du*[*].server.maxNumTokens = 5
#*.np = 2
#*.producer[*].packetRepresentation="bitCount" # é o param que permit contar em bits ao invés de bytes.
#URLLC
*.p1du1[*].packetLength = 137B #vDU1 O6
*.p3du1[*].packetLength = 137B #vDU2 O6 
*.p1du2[*].packetLength = 137B #vDU3 O6
*.p3du2[*].packetLength = 848B #vDU4 O8
#eMBB
*.p2du1.packetLength = 1509B #vDU1 O6
*.p4du1.packetLength = 1509B #vDU2 O6
*.p2du2.packetLength = 1509B #vDU3 O6
*.p4du2.packetLength = 9933B #vDU4 O8

#*.p{1,3}du*[*].packetLength = 978B#128B*7.6338 O9
#*.p{2,4}du*.packetLength = 1500B
#*.p{2,4}du*.packetLength = 10763B #1500B*7.1751 O9
#*.p**[*].**.statistic-recording = false
#*.p*.statistic-recording = false #não grava nenhum stat de queue
#*.p3du*[*].packetLength = 32B
#*.p4du*[*].packetLength = 64B
#*.p{1,3}du*[*].productionInterval = exponential(${interval = 0.001..0.002 step 0.0001}s)
*.p{1,3}du*[*].productionInterval = exponential(0.0005s) #urllc
#*.p{1,3}du*[*].productionInterval = 0.0009s #urllc
## Production Interval eMBB
*.p2du1.productionInterval = 0.000411s #vDU1 #embb 20% da RU
*.p4du1.productionInterval = 0.000206s #vDU2 #embb 40% da RU
*.p2du2.productionInterval = 0.000138s #vDU3 #embb 60% da RU
*.p4du2.productionInterval = 0.000102s #vDU4 #embb 80% da RU
#*.p{2,4}du*.productionInterval = 0.000411s #embb 20% da RU
#*.p{2,4}du*.productionInterval = 0.000206s #embb 40% da RU
#*.p{2,4}du*.productionInterval = 0.000138s #embb 60% da RU
#*.p{2,4}du*.productionInterval = 0.000102s #embb 80% da RU
*.p*du*[*].initialProductionOffset = 0.001 s
*.p*[*].burst_flavio=1
*.p*.burst_flavio=0

##*.X1du1[*].packetFilters = [expr(totalLength == 128B)]
*.X1du1[*].labels ="UE"+string(ancestorIndex(0))
*.X2du1[*].labels ="UE"+string(ancestorIndex(0))
*.X1du2[*].labels ="UE"+string(ancestorIndex(0))
*.X2du2[*].labels ="UE"+string(ancestorIndex(0))

*.cCU_UE1.labelsToGateIndices = "UE0 0 UE1 1 UE2 2 UE3 3 UE4 4 UE5 5 UE6 6 UE7 7 UE8 8 UE9 9 UE10 10 UE11 11 UE12 12 UE13 13 UE14 14 UE15 15 UE16 16 UE17 17 UE18 18 UE19 19 UE20 20 UE21 21 UE22 22 UE23 23 UE24 24 UE25 25 UE26 26 UE27 27 UE28 28 UE29 29 UE30 30 UE31 31 UE32 32 UE33 33 UE34 34 UE35 35 UE36 36 UE37 37 UE38 38 UE39 39 UE40 40 UE41 41 UE42 42 UE43 43 UE44 44 UE45 45 UE46 46 UE47 47 UE48 48 UE49 49 UE50 50 UE51 51 UE52 52 UE53 53 UE54 54 UE55 55 UE56 56 UE57 57 UE58 58 UE59 59 UE60 60 UE61 61 UE62 62 UE63 63 UE64 64 UE65 65 UE66 66 UE67 67 UE68 68 UE69 69 UE70 70 UE71 71 UE72 72 UE73 73 UE74 74 UE75 75 UE76 76 UE77 77 UE78 78 UE79 79"
*.cCU_UE3.labelsToGateIndices = "UE0 0 UE1 1 UE2 2 UE3 3 UE4 4 UE5 5 UE6 6 UE7 7 UE8 8 UE9 9 UE10 10 UE11 11 UE12 12 UE13 13 UE14 14 UE15 15 UE16 16 UE17 17 UE18 18 UE19 19 UE20 20 UE21 21 UE22 22 UE23 23 UE24 24 UE25 25 UE26 26 UE27 27 UE28 28 UE29 29 UE30 30 UE31 31 UE32 32 UE33 33 UE34 34 UE35 35 UE36 36 UE37 37 UE38 38 UE39 39 UE40 40 UE41 41 UE42 42 UE43 43 UE44 44 UE45 45 UE46 46 UE47 47 UE48 48 UE49 49 UE50 50 UE51 51 UE52 52 UE53 53 UE54 54 UE55 55 UE56 56 UE57 57 UE58 58 UE59 59 UE60 60 UE61 61 UE62 62 UE63 63 UE64 64 UE65 65 UE66 66 UE67 67 UE68 68 UE69 69 UE70 70 UE71 71 UE72 72 UE73 73 UE74 74 UE75 75 UE76 76 UE77 77 UE78 78 UE79 79"
*.cCU_UE5.labelsToGateIndices = "UE0 0 UE1 1 UE2 2 UE3 3 UE4 4 UE5 5 UE6 6 UE7 7 UE8 8 UE9 9 UE10 10 UE11 11 UE12 12 UE13 13 UE14 14 UE15 15 UE16 16 UE17 17 UE18 18 UE19 19 UE20 20 UE21 21 UE22 22 UE23 23 UE24 24 UE25 25 UE26 26 UE27 27 UE28 28 UE29 29 UE30 30 UE31 31 UE32 32 UE33 33 UE34 34 UE35 35 UE36 36 UE37 37 UE38 38 UE39 39 UE40 40 UE41 41 UE42 42 UE43 43 UE44 44 UE45 45 UE46 46 UE47 47 UE48 48 UE49 49 UE50 50 UE51 51 UE52 52 UE53 53 UE54 54 UE55 55 UE56 56 UE57 57 UE58 58 UE59 59 UE60 60 UE61 61 UE62 62 UE63 63 UE64 64 UE65 65 UE66 66 UE67 67 UE68 68 UE69 69 UE70 70 UE71 71 UE72 72 UE73 73 UE74 74 UE75 75 UE76 76 UE77 77 UE78 78 UE79 79"
*.cCU_UE7.labelsToGateIndices = "UE0 0 UE1 1 UE2 2 UE3 3 UE4 4 UE5 5 UE6 6 UE7 7 UE8 8 UE9 9 UE10 10 UE11 11 UE12 12 UE13 13 UE14 14 UE15 15 UE16 16 UE17 17 UE18 18 UE19 19 UE20 20 UE21 21 UE22 22 UE23 23 UE24 24 UE25 25 UE26 26 UE27 27 UE28 28 UE29 29 UE30 30 UE31 31 UE32 32 UE33 33 UE34 34 UE35 35 UE36 36 UE37 37 UE38 38 UE39 39 UE40 40 UE41 41 UE42 42 UE43 43 UE44 44 UE45 45 UE46 46 UE47 47 UE48 48 UE49 49 UE50 50 UE51 51 UE52 52 UE53 53 UE54 54 UE55 55 UE56 56 UE57 57 UE58 58 UE59 59 UE60 60 UE61 61 UE62 62 UE63 63 UE64 64 UE65 65 UE66 66 UE67 67 UE68 68 UE69 69 UE70 70 UE71 71 UE72 72 UE73 73 UE74 74 UE75 75 UE76 76 UE77 77 UE78 78 UE79 79"

##*.L{1,3}du*.packetFilters = [expr(totalLength == 128B)]
#*.L{1,3}du*.packetFilters = [expr(totalLength == 978B)]
*.L1du1.labels = "urllc-vdu1-du1"
*.L3du1.labels = "urllc-vdu2-du1"
*.L1du2.labels = "urllc-vdu1-du2"
*.L3du2.labels = "urllc-vdu2-du2"
##*.L{2,4}du*.packetFilters = [expr(totalLength == 1500B)]
#*.L{2,4}du*.packetFilters = [expr(totalLength == 10763B)]
*.L2du1.labels = "embb-vdu1-du1"
*.L4du1.labels = "embb-vdu2-du1"
*.L2du2.labels = "embb-vdu1-du2"
*.L4du2.labels = "embb-vdu2-du2"
#*.sch1*.weights = "2 1"
#*.sch2*.weights = "2 1"
#*.scheth*.weights = "2 1 2 1"
#*.schR1.weights = "2 1 2 1"
#*.schR2.weights = "2 1 2 1"
#*.schR3.weights = "2 1 2 1 2 1 2 1"
#*.schR4.weights = "2 1 2 1 2 1 2 1"

#*.sch1du1.weights = "28 1"
#*.sch2du1.weights = "18 1"
#*.sch1du2.weights = "12 1"
#*.sch2du2.weights = "12 1"
#*.scheth1.weights = "12 1 7 12"
#*.scheth2.weights = "120 3 4 36"
#*.schR1.weights = "12 1 7 12"
#*.schR2.weights = "336 5 12 60"
#*.schR3.weights = "48 5 46 60 20 5 120 5"
#*.schR4.weights = "48 5 48 60 22 5 72 5"

#*.sch1du1.weights = "108 1"
#*.sch2du1.weights = "108 1"
#*.sch1du2.weights = "48 1"
#*.sch2du2.weights = "3 1"
#*.scheth1.weights = "96 1 10 12"
#*.scheth2.weights = "12 2 5 24"
#*.schR1.weights = "864 3 22 36"
#*.schR2.weights = "168 9 68 108"
#*.schR3.weights = "144 5 10 60 6 5 624 5"
#*.schR4.weights = "72 5 4 60 4 5 792 5"

*.sch1du1.weights = "1 1"
*.sch2du1.weights = "1 1"
*.sch1du2.weights = "1 1"
*.sch2du2.weights = "1 1"
*.scheth1.weights = "1 1 1 1"
*.scheth2.weights = "1 1 1 1"
*.schR1.weights = "1 1 1 1"
*.schR2.weights = "1 1 1 1"
*.schR3.weights = "1 1 1 1 1 1 1 1"
*.schR4.weights = "1 1 1 1 1 1 1 1"


*.S*du*.processingTime = 0s
*.S*du*.processingBitrate = 1.002Gbps #tx maior que chegada; usar 65536bps para 32 e 64B
*.Seth*.processingTime = 0s
*.Seth*.processingBitrate = 2.5Gbps #tx maior que chegada; usar 65536bps para 32 e 64B
*.SR*.processingTime = 0s
*.SR*.processingBitrate = 5Gbps #tx maior que chegada; usar 65536bps para 32 e 64B
*.cdu1.labelsToGateIndices = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3"
*.cdu2.labelsToGateIndices = "urllc-vdu1-du2 0 embb-vdu1-du2 1 urllc-vdu2-du2 2 embb-vdu2-du2 3"
*.cR1.labelsToGateIndices  = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3"
*.cR2.labelsToGateIndices  = "urllc-vdu1-du2 0 embb-vdu1-du2 1 urllc-vdu2-du2 2 embb-vdu2-du2 3"
*.cR3.labelsToGateIndices  = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3 urllc-vdu1-du2 4 embb-vdu1-du2 5 urllc-vdu2-du2 6 embb-vdu2-du2 7"
*.cR4.labelsToGateIndices  = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3 urllc-vdu1-du2 4 embb-vdu1-du2 5 urllc-vdu2-du2 6 embb-vdu2-du2 7"
*.cCU.labelsToGateIndices  = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3 urllc-vdu1-du2 4 embb-vdu1-du2 5 urllc-vdu2-du2 6 embb-vdu2-du2 7"

[Route1]
#seed-set = 1
#repeat = 2
network = Route1
sim-time-limit = 0.5s
*.np_vdu1=${interval = 1..80 step 1}
#*.np_vdu1=80
*.np_vdu2=60
*.np_vdu3=80
*.np_vdu4=60
cmdenv-performance-display = false
cmdenv-express-mode = true
record-eventlog = false
#**.statistic-recording = true
**.m**.**.statistic-recording = false
**.Q**.**.statistic-recording = false
**.p**.**.statistic-recording = false
**.L**.**.statistic-recording = false
**.S**.**.statistic-recording = false
**.b**.**.statistic-recording = false
**.s**.**.statistic-recording = false
**.c**.**.statistic-recording = false
**.d**.**.statistic-recording = false
**.t**.**.statistic-recording = false
**.X**.**.statistic-recording = false
**.CU*_eMBB_*.**.statistic-recording = false
**.CU**.packetLengths.statistic-recording = false
**.CU**.packetJitter.statistic-recording = false
**.CU**.packetDelayDifferenceToMean.statistic-recording = false
**.CU**.packetDelayVariation.statistic-recording = false
**.CU**.droppedPacketLengths.statistic-recording = false
**.CU**.droppedDataRate.statistic-recording = false
**.CU**.dataRate.statistic-recording = false
**.CU**.meanBitLifeTimePerPacket.statistic-recording = false
*.t{1,3}du*[*].generationInterval = 0.001 s
*.t{1,3}du*[*].numTokens = 1
###------Bucket Settings---------##
*.b{1,3}du*[*].queue.packetCapacity = 10
*.b{1,3}du*[*].server.initialNumTokens = 1
*.b{1,3}du*[*].server.maxNumTokens = 2
#*.np = 2
#*.producer[*].packetRepresentation="bitCount" # é o param que permit contar em bits ao invés de bytes.
#URLLC
*.p1du1[*].packetLength = 137B #vDU1 O6
*.p3du1[*].packetLength = 978B #vDU2 O9  ok
*.p1du2[*].packetLength = 137B #vDU3 O6
*.p3du2[*].packetLength = 978B #vDU4 O9   ok
#eMBB
*.p2du1.packetLength = 1509B #vDU1 O6
*.p4du1.packetLength = 10763B #vDU2 O9  ok
*.p2du2.packetLength = 1509B #vDU3 O6
*.p4du2.packetLength = 10763B #vDU4 O9   ok

#*.p{1,3}du*[*].packetLength = 978B#128B*7.6338 O9
#*.p{2,4}du*.packetLength = 1500B
#*.p{2,4}du*.packetLength = 10763B #1500B*7.1751 O9
#*.p**[*].**.statistic-recording = false
#*.p*.statistic-recording = false #não grava nenhum stat de queue
#*.p3du*[*].packetLength = 32B
#*.p4du*[*].packetLength = 64B
#*.p{1,3}du*[*].productionInterval = exponential(${interval = 0.001..0.002 step 0.0001}s)
*.p{1,3}du*[*].productionInterval = exponential(0.0005s) #urllc
#*.p{1,3}du*[*].productionInterval = 0.0009s #urllc
## Production Interval eMBB
*.p2du1.productionInterval = 0.000411s #vDU1
*.p4du1.productionInterval = 0.000206s #vDU2
*.p2du2.productionInterval = 0.000411s #vDU3
*.p4du2.productionInterval = 0.000206s #vDU4
#*.p{2,4}du*.productionInterval = 0.000411s #embb 20% da RU
#*.p{2,4}du*.productionInterval = 0.000206s #embb 40% da RU
#*.p{2,4}du*.productionInterval = 0.000138s #embb 60% da RU
#*.p{2,4}du*.productionInterval = 0.000102s #embb 80% da RU
*.p*du*[*].initialProductionOffset = 0.001 s
*.p*[*].burst_flavio=1
*.p*.burst_flavio=0

##*.X1du1[*].packetFilters = [expr(totalLength == 128B)]
*.X1du1[*].labels ="UE"+string(ancestorIndex(0))
*.X2du1[*].labels ="UE"+string(ancestorIndex(0))
*.X1du2[*].labels ="UE"+string(ancestorIndex(0))
*.X2du2[*].labels ="UE"+string(ancestorIndex(0))

*.cCU_UE1.labelsToGateIndices = "UE0 0 UE1 1 UE2 2 UE3 3 UE4 4 UE5 5 UE6 6 UE7 7 UE8 8 UE9 9 UE10 10 UE11 11 UE12 12 UE13 13 UE14 14 UE15 15 UE16 16 UE17 17 UE18 18 UE19 19 UE20 20 UE21 21 UE22 22 UE23 23 UE24 24 UE25 25 UE26 26 UE27 27 UE28 28 UE29 29 UE30 30 UE31 31 UE32 32 UE33 33 UE34 34 UE35 35 UE36 36 UE37 37 UE38 38 UE39 39 UE40 40 UE41 41 UE42 42 UE43 43 UE44 44 UE45 45 UE46 46 UE47 47 UE48 48 UE49 49 UE50 50 UE51 51 UE52 52 UE53 53 UE54 54 UE55 55 UE56 56 UE57 57 UE58 58 UE59 59 UE60 60 UE61 61 UE62 62 UE63 63 UE64 64 UE65 65 UE66 66 UE67 67 UE68 68 UE69 69 UE70 70 UE71 71 UE72 72 UE73 73 UE74 74 UE75 75 UE76 76 UE77 77 UE78 78 UE79 79"
*.cCU_UE3.labelsToGateIndices = "UE0 0 UE1 1 UE2 2 UE3 3 UE4 4 UE5 5 UE6 6 UE7 7 UE8 8 UE9 9 UE10 10 UE11 11 UE12 12 UE13 13 UE14 14 UE15 15 UE16 16 UE17 17 UE18 18 UE19 19 UE20 20 UE21 21 UE22 22 UE23 23 UE24 24 UE25 25 UE26 26 UE27 27 UE28 28 UE29 29 UE30 30 UE31 31 UE32 32 UE33 33 UE34 34 UE35 35 UE36 36 UE37 37 UE38 38 UE39 39 UE40 40 UE41 41 UE42 42 UE43 43 UE44 44 UE45 45 UE46 46 UE47 47 UE48 48 UE49 49 UE50 50 UE51 51 UE52 52 UE53 53 UE54 54 UE55 55 UE56 56 UE57 57 UE58 58 UE59 59 UE60 60 UE61 61 UE62 62 UE63 63 UE64 64 UE65 65 UE66 66 UE67 67 UE68 68 UE69 69 UE70 70 UE71 71 UE72 72 UE73 73 UE74 74 UE75 75 UE76 76 UE77 77 UE78 78 UE79 79"
*.cCU_UE5.labelsToGateIndices = "UE0 0 UE1 1 UE2 2 UE3 3 UE4 4 UE5 5 UE6 6 UE7 7 UE8 8 UE9 9 UE10 10 UE11 11 UE12 12 UE13 13 UE14 14 UE15 15 UE16 16 UE17 17 UE18 18 UE19 19 UE20 20 UE21 21 UE22 22 UE23 23 UE24 24 UE25 25 UE26 26 UE27 27 UE28 28 UE29 29 UE30 30 UE31 31 UE32 32 UE33 33 UE34 34 UE35 35 UE36 36 UE37 37 UE38 38 UE39 39 UE40 40 UE41 41 UE42 42 UE43 43 UE44 44 UE45 45 UE46 46 UE47 47 UE48 48 UE49 49 UE50 50 UE51 51 UE52 52 UE53 53 UE54 54 UE55 55 UE56 56 UE57 57 UE58 58 UE59 59 UE60 60 UE61 61 UE62 62 UE63 63 UE64 64 UE65 65 UE66 66 UE67 67 UE68 68 UE69 69 UE70 70 UE71 71 UE72 72 UE73 73 UE74 74 UE75 75 UE76 76 UE77 77 UE78 78 UE79 79"
*.cCU_UE7.labelsToGateIndices = "UE0 0 UE1 1 UE2 2 UE3 3 UE4 4 UE5 5 UE6 6 UE7 7 UE8 8 UE9 9 UE10 10 UE11 11 UE12 12 UE13 13 UE14 14 UE15 15 UE16 16 UE17 17 UE18 18 UE19 19 UE20 20 UE21 21 UE22 22 UE23 23 UE24 24 UE25 25 UE26 26 UE27 27 UE28 28 UE29 29 UE30 30 UE31 31 UE32 32 UE33 33 UE34 34 UE35 35 UE36 36 UE37 37 UE38 38 UE39 39 UE40 40 UE41 41 UE42 42 UE43 43 UE44 44 UE45 45 UE46 46 UE47 47 UE48 48 UE49 49 UE50 50 UE51 51 UE52 52 UE53 53 UE54 54 UE55 55 UE56 56 UE57 57 UE58 58 UE59 59 UE60 60 UE61 61 UE62 62 UE63 63 UE64 64 UE65 65 UE66 66 UE67 67 UE68 68 UE69 69 UE70 70 UE71 71 UE72 72 UE73 73 UE74 74 UE75 75 UE76 76 UE77 77 UE78 78 UE79 79"

##*.L{1,3}du*.packetFilters = [expr(totalLength == 128B)]
#*.L{1,3}du*.packetFilters = [expr(totalLength == 978B)]
*.L1du1.labels = "urllc-vdu1-du1"
*.L3du1.labels = "urllc-vdu2-du1"
*.L1du2.labels = "urllc-vdu1-du2"
*.L3du2.labels = "urllc-vdu2-du2"
##*.L{2,4}du*.packetFilters = [expr(totalLength == 1500B)]
#*.L{2,4}du*.packetFilters = [expr(totalLength == 10763B)]
*.L2du1.labels = "embb-vdu1-du1"
*.L4du1.labels = "embb-vdu2-du1"
*.L2du2.labels = "embb-vdu1-du2"
*.L4du2.labels = "embb-vdu2-du2"
#*.sch1*.weights = "2 1"
#*.sch2*.weights = "2 1"
#*.scheth*.weights = "2 1 2 1"
#*.schR1.weights = "2 1 2 1"
#*.schR2.weights = "2 1 2 1"
#*.schR3.weights = "2 1 2 1 2 1 2 1"
#*.schR4.weights = "2 1 2 1 2 1 2 1"
*.sch1du1.weights = "18 1"
*.sch2du1.weights = "28 1"
*.sch1du2.weights = "108 1"
*.sch2du2.weights = "28 1"
*.scheth1.weights = "12 1 7 12"
*.scheth2.weights = "192 1 2 12"
*.schR1.weights = "216 5 56 60 16"
*.schR2.weights = "48 1 40 12 2 1 1"
*.schR3.weights = "192 5 9 60 56 5 144 5"
*.schR4.weights = "96 5 68 60 84 5 240 5"
*.S*du*.processingTime = 0s
*.S*du*.processingBitrate = 1.2Gbps #tx maior que chegada; usar 65536bps para 32 e 64B
*.Seth*.processingTime = 0s
*.Seth*.processingBitrate = 8Gbps #tx maior que chegada; usar 65536bps para 32 e 64B
*.SR*.processingTime = 0s
*.SR*.processingBitrate = 20Gbps #tx maior que chegada; usar 65536bps para 32 e 64B
*.cdu1.labelsToGateIndices = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3"
*.cdu2.labelsToGateIndices = "urllc-vdu1-du2 0 embb-vdu1-du2 1 urllc-vdu2-du2 2 embb-vdu2-du2 3"
*.cR1.labelsToGateIndices  = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3"
*.cR2.labelsToGateIndices  = "urllc-vdu1-du2 0 embb-vdu1-du2 1 urllc-vdu2-du2 2 embb-vdu2-du2 3"
*.cR5.labelsToGateIndices  = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3"
*.cR6.labelsToGateIndices  = "urllc-vdu1-du2 0 embb-vdu1-du2 1 urllc-vdu2-du2 2 embb-vdu2-du2 3"
*.cR3.labelsToGateIndices  = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3 urllc-vdu1-du2 4 embb-vdu1-du2 5 urllc-vdu2-du2 6 embb-vdu2-du2 7"
*.cR4.labelsToGateIndices  = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3 urllc-vdu1-du2 4 embb-vdu1-du2 5 urllc-vdu2-du2 6 embb-vdu2-du2 7"
*.cCU.labelsToGateIndices  = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3 urllc-vdu1-du2 4 embb-vdu1-du2 5 urllc-vdu2-du2 6 embb-vdu2-du2 7"


[Menor]
#seed-set = 1
#repeat = 2
network = Menor
sim-time-limit = 0.5s
*.np_vdu4=${interval = 1..20 step 1}
*.np_vdu1=80
*.np_vdu2=60
*.np_vdu3=40
#*.np_vdu4=20
cmdenv-performance-display = false
cmdenv-express-mode = true
record-eventlog = false
#**.statistic-recording = true
**.m**.**.statistic-recording = false
**.Q**.**.statistic-recording = false
**.p**.**.statistic-recording = false
**.L**.**.statistic-recording = false
**.S**.**.statistic-recording = false
**.b**.**.statistic-recording = false
**.s**.**.statistic-recording = false
**.c**.**.statistic-recording = false
**.d**.**.statistic-recording = false
**.t**.**.statistic-recording = false
**.X**.**.statistic-recording = false
**.CU*_eMBB_*.**.statistic-recording = false
**.CU**.packetLengths.statistic-recording = false
**.CU**.packetJitter.statistic-recording = false
**.CU**.packetDelayDifferenceToMean.statistic-recording = false
**.CU**.packetDelayVariation.statistic-recording = false
**.CU**.droppedPacketLengths.statistic-recording = false
**.CU**.droppedDataRate.statistic-recording = false
**.CU**.dataRate.statistic-recording = false
**.CU**.meanBitLifeTimePerPacket.statistic-recording = false
*.t{1,3}du*[*].generationInterval = 0.001 s
*.t{1,3}du*[*].numTokens = 1
###------Bucket Settings---------##
*.b{1,3}du*[*].queue.packetCapacity = 10
*.b{1,3}du*[*].server.initialNumTokens = 1
*.b{1,3}du*[*].server.maxNumTokens = 2
#*.np = 2
#*.producer[*].packetRepresentation="bitCount" # é o param que permit contar em bits ao invés de bytes.
##URLLC
#*.p1du1[*].packetLength = 137B #vDU1 O6
#*.p3du1[*].packetLength = 978B #vDU2 O9 
#*.p1du2[*].packetLength = 978B #vDU3 O9
#*.p3du2[*].packetLength = 978B #vDU4 O9
##eMBB
#*.p2du1.packetLength = 1509B #vDU1 O6
#*.p4du1.packetLength = 10763B #vDU2 O9 
#*.p2du2.packetLength = 10763B #vDU3 O9
#*.p4du2.packetLength = 10763B #vDU4 O9

#URLLC
*.p1du1[*].packetLength = 137B #vDU1 O6
*.p3du1[*].packetLength = 137B #vDU2 O6 
*.p1du2[*].packetLength = 137B #vDU3 O6
*.p3du2[*].packetLength = 848B #vDU4 O8
#eMBB
*.p2du1.packetLength = 1509B #vDU1 O6
*.p4du1.packetLength = 1509B #vDU2 O6
*.p2du2.packetLength = 1509B #vDU3 O6
*.p4du2.packetLength = 9933B #vDU4 O8

#*.p{1,3}du*[*].packetLength = 978B#128B*7.6338 O9
#*.p{2,4}du*.packetLength = 1500B
#*.p{2,4}du*.packetLength = 10763B #1500B*7.1751 O9
#*.p**[*].**.statistic-recording = false
#*.p*.statistic-recording = false #não grava nenhum stat de queue
#*.p3du*[*].packetLength = 32B
#*.p4du*[*].packetLength = 64B
#*.p{1,3}du*[*].productionInterval = exponential(${interval = 0.001..0.002 step 0.0001}s)
*.p{1,3}du*[*].productionInterval = exponential(0.0005s) #urllc
#*.p{1,3}du*[*].productionInterval = 0.0009s #urllc
## Production Interval eMBB
#*.p2du1.productionInterval = 0.000411s #vDU1
#*.p4du1.productionInterval = 0.000206s #vDU2
#*.p2du2.productionInterval = 0.000411s #vDU3
#*.p4du2.productionInterval = 0.000206s #vDU4
*.p2du1.productionInterval = 0.000411s #embb 20% da RU
*.p4du1.productionInterval = 0.000206s #embb 40% da RU
*.p2du2.productionInterval = 0.000138s #embb 60% da RU
*.p4du2.productionInterval = 0.000102s #embb 80% da RU
*.p*du*[*].initialProductionOffset = 0.001 s
*.p*[*].burst_flavio=1
*.p*.burst_flavio=0

##*.X1du1[*].packetFilters = [expr(totalLength == 128B)]
*.X1du1[*].labels ="UE"+string(ancestorIndex(0))
*.X2du1[*].labels ="UE"+string(ancestorIndex(0))
*.X1du2[*].labels ="UE"+string(ancestorIndex(0))
*.X2du2[*].labels ="UE"+string(ancestorIndex(0))

*.cCU_UE1.labelsToGateIndices = "UE0 0 UE1 1 UE2 2 UE3 3 UE4 4 UE5 5 UE6 6 UE7 7 UE8 8 UE9 9 UE10 10 UE11 11 UE12 12 UE13 13 UE14 14 UE15 15 UE16 16 UE17 17 UE18 18 UE19 19 UE20 20 UE21 21 UE22 22 UE23 23 UE24 24 UE25 25 UE26 26 UE27 27 UE28 28 UE29 29 UE30 30 UE31 31 UE32 32 UE33 33 UE34 34 UE35 35 UE36 36 UE37 37 UE38 38 UE39 39 UE40 40 UE41 41 UE42 42 UE43 43 UE44 44 UE45 45 UE46 46 UE47 47 UE48 48 UE49 49 UE50 50 UE51 51 UE52 52 UE53 53 UE54 54 UE55 55 UE56 56 UE57 57 UE58 58 UE59 59 UE60 60 UE61 61 UE62 62 UE63 63 UE64 64 UE65 65 UE66 66 UE67 67 UE68 68 UE69 69 UE70 70 UE71 71 UE72 72 UE73 73 UE74 74 UE75 75 UE76 76 UE77 77 UE78 78 UE79 79"
*.cCU_UE3.labelsToGateIndices = "UE0 0 UE1 1 UE2 2 UE3 3 UE4 4 UE5 5 UE6 6 UE7 7 UE8 8 UE9 9 UE10 10 UE11 11 UE12 12 UE13 13 UE14 14 UE15 15 UE16 16 UE17 17 UE18 18 UE19 19 UE20 20 UE21 21 UE22 22 UE23 23 UE24 24 UE25 25 UE26 26 UE27 27 UE28 28 UE29 29 UE30 30 UE31 31 UE32 32 UE33 33 UE34 34 UE35 35 UE36 36 UE37 37 UE38 38 UE39 39 UE40 40 UE41 41 UE42 42 UE43 43 UE44 44 UE45 45 UE46 46 UE47 47 UE48 48 UE49 49 UE50 50 UE51 51 UE52 52 UE53 53 UE54 54 UE55 55 UE56 56 UE57 57 UE58 58 UE59 59 UE60 60 UE61 61 UE62 62 UE63 63 UE64 64 UE65 65 UE66 66 UE67 67 UE68 68 UE69 69 UE70 70 UE71 71 UE72 72 UE73 73 UE74 74 UE75 75 UE76 76 UE77 77 UE78 78 UE79 79"
*.cCU_UE5.labelsToGateIndices = "UE0 0 UE1 1 UE2 2 UE3 3 UE4 4 UE5 5 UE6 6 UE7 7 UE8 8 UE9 9 UE10 10 UE11 11 UE12 12 UE13 13 UE14 14 UE15 15 UE16 16 UE17 17 UE18 18 UE19 19 UE20 20 UE21 21 UE22 22 UE23 23 UE24 24 UE25 25 UE26 26 UE27 27 UE28 28 UE29 29 UE30 30 UE31 31 UE32 32 UE33 33 UE34 34 UE35 35 UE36 36 UE37 37 UE38 38 UE39 39 UE40 40 UE41 41 UE42 42 UE43 43 UE44 44 UE45 45 UE46 46 UE47 47 UE48 48 UE49 49 UE50 50 UE51 51 UE52 52 UE53 53 UE54 54 UE55 55 UE56 56 UE57 57 UE58 58 UE59 59 UE60 60 UE61 61 UE62 62 UE63 63 UE64 64 UE65 65 UE66 66 UE67 67 UE68 68 UE69 69 UE70 70 UE71 71 UE72 72 UE73 73 UE74 74 UE75 75 UE76 76 UE77 77 UE78 78 UE79 79"
*.cCU_UE7.labelsToGateIndices = "UE0 0 UE1 1 UE2 2 UE3 3 UE4 4 UE5 5 UE6 6 UE7 7 UE8 8 UE9 9 UE10 10 UE11 11 UE12 12 UE13 13 UE14 14 UE15 15 UE16 16 UE17 17 UE18 18 UE19 19 UE20 20 UE21 21 UE22 22 UE23 23 UE24 24 UE25 25 UE26 26 UE27 27 UE28 28 UE29 29 UE30 30 UE31 31 UE32 32 UE33 33 UE34 34 UE35 35 UE36 36 UE37 37 UE38 38 UE39 39 UE40 40 UE41 41 UE42 42 UE43 43 UE44 44 UE45 45 UE46 46 UE47 47 UE48 48 UE49 49 UE50 50 UE51 51 UE52 52 UE53 53 UE54 54 UE55 55 UE56 56 UE57 57 UE58 58 UE59 59 UE60 60 UE61 61 UE62 62 UE63 63 UE64 64 UE65 65 UE66 66 UE67 67 UE68 68 UE69 69 UE70 70 UE71 71 UE72 72 UE73 73 UE74 74 UE75 75 UE76 76 UE77 77 UE78 78 UE79 79"

##*.L{1,3}du*.packetFilters = [expr(totalLength == 128B)]
#*.L{1,3}du*.packetFilters = [expr(totalLength == 978B)]
*.L1du1.labels = "urllc-vdu1-du1"
*.L3du1.labels = "urllc-vdu2-du1"
*.L1du2.labels = "urllc-vdu1-du2"
*.L3du2.labels = "urllc-vdu2-du2"
##*.L{2,4}du*.packetFilters = [expr(totalLength == 1500B)]
#*.L{2,4}du*.packetFilters = [expr(totalLength == 10763B)]
*.L2du1.labels = "embb-vdu1-du1"
*.L4du1.labels = "embb-vdu2-du1"
*.L2du2.labels = "embb-vdu1-du2"
*.L4du2.labels = "embb-vdu2-du2"
#*.sch1*.weights = "2 1"
#*.sch2*.weights = "2 1"
#*.scheth*.weights = "2 1 2 1"
#*.schR1.weights = "2 1 2 1"
#*.schR2.weights = "2 1 2 1"
#*.schR3.weights = "2 1 2 1 2 1 2 1"
#*.schR4.weights = "2 1 2 1 2 1 2 1"
#*.sch1*.weights = "1 1"
#*.sch2*.weights = "1 1"
#*.scheth*.weights = "1 1 1 1"
#*.schR1.weights = "1 1 1 1"
#*.schR2.weights = "1 1 1 1"
#*.schR3.weights = "1 1 1 1 1 1 1 1"
*.schR4.weights = "1 1 1 1 1 1 1 1"
#*.S*du*.processingTime = 0s
#*.S*du*.processingBitrate = 1.2Gbps #tx maior que chegada; usar 65536bps para 32 e 64B
#*.Seth*.processingTime = 0s
#*.Seth*.processingBitrate = 8Gbps #tx maior que chegada; usar 65536bps para 32 e 64B
*.SR*.processingTime = 0s
*.SR*.processingBitrate = 100000 Gbps #tx maior que chegada; usar 65536bps para 32 e 64B
#*.cdu1.labelsToGateIndices = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3"
#*.cdu2.labelsToGateIndices = "urllc-vdu1-du2 0 embb-vdu1-du2 1 urllc-vdu2-du2 2 embb-vdu2-du2 3"
#*.cR1.labelsToGateIndices  = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3"
#*.cR2.labelsToGateIndices  = "urllc-vdu1-du2 0 embb-vdu1-du2 1 urllc-vdu2-du2 2 embb-vdu2-du2 3"
#*.cR3.labelsToGateIndices  = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3 urllc-vdu1-du2 4 embb-vdu1-du2 5 urllc-vdu2-du2 6 embb-vdu2-du2 7"
*.cR4.labelsToGateIndices  = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3 urllc-vdu1-du2 4 embb-vdu1-du2 5 urllc-vdu2-du2 6 embb-vdu2-du2 7"
*.cCU.labelsToGateIndices  = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3 urllc-vdu1-du2 4 embb-vdu1-du2 5 urllc-vdu2-du2 6 embb-vdu2-du2 7"

[Maior_mux]
#seed-set = 1
#repeat = 2
network = Maior_mux
sim-time-limit = 0.5s
#*.np_vdu4=${interval = 1..20 step 1}
*.np_vdu1=80
*.np_vdu2=60
*.np_vdu3=40
*.np_vdu4=20
cmdenv-performance-display = false
cmdenv-express-mode = true
record-eventlog = false
#**.statistic-recording = true
**.m**.**.statistic-recording = false
**.Q**.**.statistic-recording = false
**.p**.**.statistic-recording = false
**.L**.**.statistic-recording = false
**.S**.**.statistic-recording = false
**.b**.**.statistic-recording = false
**.s**.**.statistic-recording = false
**.c**.**.statistic-recording = false
**.d**.**.statistic-recording = false
**.t**.**.statistic-recording = false
**.X**.**.statistic-recording = false
**.CU*_eMBB_*.**.statistic-recording = false
**.CU**.packetLengths.statistic-recording = false
**.CU**.packetJitter.statistic-recording = false
**.CU**.packetDelayDifferenceToMean.statistic-recording = false
**.CU**.packetDelayVariation.statistic-recording = false
**.CU**.droppedPacketLengths.statistic-recording = false
**.CU**.droppedDataRate.statistic-recording = false
**.CU**.dataRate.statistic-recording = false
**.CU**.meanBitLifeTimePerPacket.statistic-recording = false
*.t{1,3}du*[*].generationInterval = 0.001 s
*.t{1,3}du*[*].numTokens = 1
###------Bucket Settings---------##
*.b{1,3}du*[*].queue.packetCapacity = 10
*.b{1,3}du*[*].server.initialNumTokens = 2
*.b{1,3}du*[*].server.maxNumTokens = 2
#*.np = 2
#*.producer[*].packetRepresentation="bitCount" # é o param que permit contar em bits ao invés de bytes.
##URLLC
#*.p1du1[*].packetLength = 137B #vDU1 O6
#*.p3du1[*].packetLength = 137B #vDU2 O6 
#*.p1du2[*].packetLength = 137B #vDU3 O6
#*.p3du2[*].packetLength = 848B #vDU4 O8
##eMBB
#*.p2du1.packetLength = 1509B #vDU1 O6
#*.p4du1.packetLength = 1509B #vDU2 O6
#*.p2du2.packetLength = 1509B #vDU3 O6
#*.p4du2.packetLength = 9933B #vDU4 O8

#URLLC
*.p1du1[*].packetLength = 137B #vDU1 O6
*.p3du1[*].packetLength = 978B #vDU2 O9 
*.p1du2[*].packetLength = 978B #vDU3 O9
*.p3du2[*].packetLength = 978B #vDU4 O9
#eMBB
*.p2du1.packetLength = 1509B #vDU1 O6
*.p4du1.packetLength = 10763B #vDU2 O9
*.p2du2.packetLength = 10763B #vDU3 O9
*.p4du2.packetLength = 10763B #vDU4 O9

#*.p{1,3}du*[*].packetLength = 978B#128B*7.6338 O9
#*.p{2,4}du*.packetLength = 1500B
#*.p{2,4}du*.packetLength = 10763B #1500B*7.1751 O9
#*.p**[*].**.statistic-recording = false
#*.p*.statistic-recording = false #não grava nenhum stat de queue
#*.p3du*[*].packetLength = 32B
#*.p4du*[*].packetLength = 64B
#*.p{1,3}du*[*].productionInterval = exponential(${interval = 0.001..0.002 step 0.0001}s)
*.p{1,3}du*[*].productionInterval = exponential(0.0005s) #urllc
#*.p{1,3}du*[*].productionInterval = 0.0009s #urllc
## Production Interval eMBB
*.p2du1.productionInterval = 0.000411s #vDU1 #embb 20% da RU
*.p4du1.productionInterval = 0.000206s #vDU2 #embb 40% da RU
*.p2du2.productionInterval = 0.000138s #vDU3 #embb 60% da RU
*.p4du2.productionInterval = 0.000102s #vDU4 #embb 80% da RU
#*.p{2,4}du*.productionInterval = 0.000411s #embb 20% da RU
#*.p{2,4}du*.productionInterval = 0.000206s #embb 40% da RU
#*.p{2,4}du*.productionInterval = 0.000138s #embb 60% da RU
#*.p{2,4}du*.productionInterval = 0.000102s #embb 80% da RU
*.p*du*[*].initialProductionOffset = 0.001 s
*.p*[*].burst_flavio=1
*.p*.burst_flavio=0

##*.X1du1[*].packetFilters = [expr(totalLength == 128B)]
*.X1du1[*].labels ="UE"+string(ancestorIndex(0))
*.X2du1[*].labels ="UE"+string(ancestorIndex(0))
*.X1du2[*].labels ="UE"+string(ancestorIndex(0))
*.X2du2[*].labels ="UE"+string(ancestorIndex(0))

*.cCU_UE1.labelsToGateIndices = "UE0 0 UE1 1 UE2 2 UE3 3 UE4 4 UE5 5 UE6 6 UE7 7 UE8 8 UE9 9 UE10 10 UE11 11 UE12 12 UE13 13 UE14 14 UE15 15 UE16 16 UE17 17 UE18 18 UE19 19 UE20 20 UE21 21 UE22 22 UE23 23 UE24 24 UE25 25 UE26 26 UE27 27 UE28 28 UE29 29 UE30 30 UE31 31 UE32 32 UE33 33 UE34 34 UE35 35 UE36 36 UE37 37 UE38 38 UE39 39 UE40 40 UE41 41 UE42 42 UE43 43 UE44 44 UE45 45 UE46 46 UE47 47 UE48 48 UE49 49 UE50 50 UE51 51 UE52 52 UE53 53 UE54 54 UE55 55 UE56 56 UE57 57 UE58 58 UE59 59 UE60 60 UE61 61 UE62 62 UE63 63 UE64 64 UE65 65 UE66 66 UE67 67 UE68 68 UE69 69 UE70 70 UE71 71 UE72 72 UE73 73 UE74 74 UE75 75 UE76 76 UE77 77 UE78 78 UE79 79"
*.cCU_UE3.labelsToGateIndices = "UE0 0 UE1 1 UE2 2 UE3 3 UE4 4 UE5 5 UE6 6 UE7 7 UE8 8 UE9 9 UE10 10 UE11 11 UE12 12 UE13 13 UE14 14 UE15 15 UE16 16 UE17 17 UE18 18 UE19 19 UE20 20 UE21 21 UE22 22 UE23 23 UE24 24 UE25 25 UE26 26 UE27 27 UE28 28 UE29 29 UE30 30 UE31 31 UE32 32 UE33 33 UE34 34 UE35 35 UE36 36 UE37 37 UE38 38 UE39 39 UE40 40 UE41 41 UE42 42 UE43 43 UE44 44 UE45 45 UE46 46 UE47 47 UE48 48 UE49 49 UE50 50 UE51 51 UE52 52 UE53 53 UE54 54 UE55 55 UE56 56 UE57 57 UE58 58 UE59 59 UE60 60 UE61 61 UE62 62 UE63 63 UE64 64 UE65 65 UE66 66 UE67 67 UE68 68 UE69 69 UE70 70 UE71 71 UE72 72 UE73 73 UE74 74 UE75 75 UE76 76 UE77 77 UE78 78 UE79 79"
*.cCU_UE5.labelsToGateIndices = "UE0 0 UE1 1 UE2 2 UE3 3 UE4 4 UE5 5 UE6 6 UE7 7 UE8 8 UE9 9 UE10 10 UE11 11 UE12 12 UE13 13 UE14 14 UE15 15 UE16 16 UE17 17 UE18 18 UE19 19 UE20 20 UE21 21 UE22 22 UE23 23 UE24 24 UE25 25 UE26 26 UE27 27 UE28 28 UE29 29 UE30 30 UE31 31 UE32 32 UE33 33 UE34 34 UE35 35 UE36 36 UE37 37 UE38 38 UE39 39 UE40 40 UE41 41 UE42 42 UE43 43 UE44 44 UE45 45 UE46 46 UE47 47 UE48 48 UE49 49 UE50 50 UE51 51 UE52 52 UE53 53 UE54 54 UE55 55 UE56 56 UE57 57 UE58 58 UE59 59 UE60 60 UE61 61 UE62 62 UE63 63 UE64 64 UE65 65 UE66 66 UE67 67 UE68 68 UE69 69 UE70 70 UE71 71 UE72 72 UE73 73 UE74 74 UE75 75 UE76 76 UE77 77 UE78 78 UE79 79"
*.cCU_UE7.labelsToGateIndices = "UE0 0 UE1 1 UE2 2 UE3 3 UE4 4 UE5 5 UE6 6 UE7 7 UE8 8 UE9 9 UE10 10 UE11 11 UE12 12 UE13 13 UE14 14 UE15 15 UE16 16 UE17 17 UE18 18 UE19 19 UE20 20 UE21 21 UE22 22 UE23 23 UE24 24 UE25 25 UE26 26 UE27 27 UE28 28 UE29 29 UE30 30 UE31 31 UE32 32 UE33 33 UE34 34 UE35 35 UE36 36 UE37 37 UE38 38 UE39 39 UE40 40 UE41 41 UE42 42 UE43 43 UE44 44 UE45 45 UE46 46 UE47 47 UE48 48 UE49 49 UE50 50 UE51 51 UE52 52 UE53 53 UE54 54 UE55 55 UE56 56 UE57 57 UE58 58 UE59 59 UE60 60 UE61 61 UE62 62 UE63 63 UE64 64 UE65 65 UE66 66 UE67 67 UE68 68 UE69 69 UE70 70 UE71 71 UE72 72 UE73 73 UE74 74 UE75 75 UE76 76 UE77 77 UE78 78 UE79 79"

##*.L{1,3}du*.packetFilters = [expr(totalLength == 128B)]
#*.L{1,3}du*.packetFilters = [expr(totalLength == 978B)]
*.L1du1.labels = "urllc-vdu1-du1"
*.L3du1.labels = "urllc-vdu2-du1"
*.L1du2.labels = "urllc-vdu1-du2"
*.L3du2.labels = "urllc-vdu2-du2"
##*.L{2,4}du*.packetFilters = [expr(totalLength == 1500B)]
#*.L{2,4}du*.packetFilters = [expr(totalLength == 10763B)]
*.L2du1.labels = "embb-vdu1-du1"
*.L4du1.labels = "embb-vdu2-du1"
*.L2du2.labels = "embb-vdu1-du2"
*.L4du2.labels = "embb-vdu2-du2"
#*.sch1*.weights = "2 1"
#*.sch2*.weights = "2 1"
#*.scheth*.weights = "2 1 2 1"
#*.schR1.weights = "2 1 2 1"
#*.schR2.weights = "2 1 2 1"
#*.schR3.weights = "2 1 2 1 2 1 2 1"
#*.schR4.weights = "2 1 2 1 2 1 2 1"

*.sch1du1.weights = "28 1"
*.sch2du1.weights = "18 1"
*.sch1du2.weights = "12 1"
*.sch2du2.weights = "12 1"
*.scheth1.weights = "12 1 7 12"
*.scheth2.weights = "120 3 4 36"
*.schR1.weights = "12 1 7 12"
*.schR2.weights = "336 5 12 60"
*.schR3.weights = "48 5 46 60 20 5 120 5"
*.schR4.weights = "48 5 48 60 22 5 72 5"

#*.sch1du1.weights = "108 1"
#*.sch2du1.weights = "108 1"
#*.sch1du2.weights = "48 1"
#*.sch2du2.weights = "3 1"
#*.scheth1.weights = "96 1 10 12"
#*.scheth2.weights = "12 2 5 24"
#*.schR1.weights = "864 3 22 36"
#*.schR2.weights = "168 9 68 108"
#*.schR3.weights = "144 5 10 60 6 5 624 5"
#*.schR4.weights = "72 5 4 60 4 5 792 5"

#*.sch1du1.weights = "1 1"
#*.sch2du1.weights = "1 1"
#*.sch1du2.weights = "1 1"
#*.sch2du2.weights = "1 1"
#*.scheth1.weights = "1 1 1 1"
#*.scheth2.weights = "1 1 1 1"
#*.schR1.weights = "1 1 1 1"
#*.schR2.weights = "1 1 1 1"
#*.schR3.weights = "1 1 1 1 1 1 1 1"
#*.schR4.weights = "1 1 1 1 1 1 1 1"


*.S*du*.processingTime = 0s
*.S*du*.processingBitrate = 1.002Gbps #tx maior que chegada; usar 65536bps para 32 e 64B
*.Seth*.processingTime = 0s
*.Seth*.processingBitrate = 2.5Gbps #tx maior que chegada; usar 65536bps para 32 e 64B
*.SR*.processingTime = 0s
*.SR*.processingBitrate = 5Gbps #tx maior que chegada; usar 65536bps para 32 e 64B
*.cdu1.labelsToGateIndices = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3"
*.cdu2.labelsToGateIndices = "urllc-vdu1-du2 0 embb-vdu1-du2 1 urllc-vdu2-du2 2 embb-vdu2-du2 3"
*.cR1.labelsToGateIndices  = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3"
*.cR2.labelsToGateIndices  = "urllc-vdu1-du2 0 embb-vdu1-du2 1 urllc-vdu2-du2 2 embb-vdu2-du2 3"
*.cR3.labelsToGateIndices  = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3 urllc-vdu1-du2 4 embb-vdu1-du2 5 urllc-vdu2-du2 6 embb-vdu2-du2 7"
*.cR4.labelsToGateIndices  = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3 urllc-vdu1-du2 4 embb-vdu1-du2 5 urllc-vdu2-du2 6 embb-vdu2-du2 7"
*.cCU.labelsToGateIndices  = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3 urllc-vdu1-du2 4 embb-vdu1-du2 5 urllc-vdu2-du2 6 embb-vdu2-du2 7"


[Menor_mux]
#seed-set = 1
#repeat = 2
network = Menor_mux
sim-time-limit = 0.5s
#*.np_vdu4=${interval = 1..20 step 1}
*.np_vdu1=80
*.np_vdu2=60
*.np_vdu3=40
*.np_vdu4=20
cmdenv-performance-display = false
cmdenv-express-mode = true
record-eventlog = false
#**.statistic-recording = true
**.m**.**.statistic-recording = false
**.Q**.**.statistic-recording = false
**.p**.**.statistic-recording = false
**.L**.**.statistic-recording = false
**.S**.**.statistic-recording = false
**.b**.**.statistic-recording = false
**.s**.**.statistic-recording = false
**.c**.**.statistic-recording = false
**.d**.**.statistic-recording = false
**.t**.**.statistic-recording = false
**.X**.**.statistic-recording = false
**.CU*_eMBB_*.**.statistic-recording = false
**.CU**.packetLengths.statistic-recording = false
**.CU**.packetJitter.statistic-recording = false
**.CU**.packetDelayDifferenceToMean.statistic-recording = false
**.CU**.packetDelayVariation.statistic-recording = false
**.CU**.droppedPacketLengths.statistic-recording = false
**.CU**.droppedDataRate.statistic-recording = false
**.CU**.dataRate.statistic-recording = false
**.CU**.meanBitLifeTimePerPacket.statistic-recording = false
*.t{1,3}du*[*].generationInterval = 0.001 s
*.t{1,3}du*[*].numTokens = 1
###------Bucket Settings---------##
*.b{1,3}du*[*].queue.packetCapacity = 10
*.b{1,3}du*[*].server.initialNumTokens = 2
*.b{1,3}du*[*].server.maxNumTokens = 2
#*.np = 2
#*.producer[*].packetRepresentation="bitCount" # é o param que permit contar em bits ao invés de bytes.
##URLLC
#*.p1du1[*].packetLength = 137B #vDU1 O6
#*.p3du1[*].packetLength = 978B #vDU2 O9 
#*.p1du2[*].packetLength = 978B #vDU3 O9
#*.p3du2[*].packetLength = 978B #vDU4 O9
##eMBB
#*.p2du1.packetLength = 1509B #vDU1 O6
#*.p4du1.packetLength = 10763B #vDU2 O9 
#*.p2du2.packetLength = 10763B #vDU3 O9
#*.p4du2.packetLength = 10763B #vDU4 O9

#URLLC
*.p1du1[*].packetLength = 137B #vDU1 O6
*.p3du1[*].packetLength = 978B #vDU2 O9 
*.p1du2[*].packetLength = 978B #vDU3 O9
*.p3du2[*].packetLength = 978B #vDU4 O9
#eMBB
*.p2du1.packetLength = 1509B #vDU1 O6
*.p4du1.packetLength = 10763B #vDU2 O9
*.p2du2.packetLength = 10763B #vDU3 O9
*.p4du2.packetLength = 10763B #vDU4 O9

#*.p{1,3}du*[*].packetLength = 978B#128B*7.6338 O9
#*.p{2,4}du*.packetLength = 1500B
#*.p{2,4}du*.packetLength = 10763B #1500B*7.1751 O9
#*.p**[*].**.statistic-recording = false
#*.p*.statistic-recording = false #não grava nenhum stat de queue
#*.p3du*[*].packetLength = 32B
#*.p4du*[*].packetLength = 64B
#*.p{1,3}du*[*].productionInterval = exponential(${interval = 0.001..0.002 step 0.0001}s)
*.p{1,3}du*[*].productionInterval = exponential(0.0005s) #urllc
#*.p{1,3}du*[*].productionInterval = 0.0009s #urllc
## Production Interval eMBB
#*.p2du1.productionInterval = 0.000411s #vDU1
#*.p4du1.productionInterval = 0.000206s #vDU2
#*.p2du2.productionInterval = 0.000411s #vDU3
#*.p4du2.productionInterval = 0.000206s #vDU4
*.p2du1.productionInterval = 0.000411s #embb 20% da RU
*.p4du1.productionInterval = 0.000206s #embb 40% da RU
*.p2du2.productionInterval = 0.000138s #embb 60% da RU
*.p4du2.productionInterval = 0.000102s #embb 80% da RU
*.p*du*[*].initialProductionOffset = 0.001 s
*.p*[*].burst_flavio=1
*.p*.burst_flavio=0

##*.X1du1[*].packetFilters = [expr(totalLength == 128B)]
*.X1du1[*].labels ="UE"+string(ancestorIndex(0))
*.X2du1[*].labels ="UE"+string(ancestorIndex(0))
*.X1du2[*].labels ="UE"+string(ancestorIndex(0))
*.X2du2[*].labels ="UE"+string(ancestorIndex(0))

*.cCU_UE1.labelsToGateIndices = "UE0 0 UE1 1 UE2 2 UE3 3 UE4 4 UE5 5 UE6 6 UE7 7 UE8 8 UE9 9 UE10 10 UE11 11 UE12 12 UE13 13 UE14 14 UE15 15 UE16 16 UE17 17 UE18 18 UE19 19 UE20 20 UE21 21 UE22 22 UE23 23 UE24 24 UE25 25 UE26 26 UE27 27 UE28 28 UE29 29 UE30 30 UE31 31 UE32 32 UE33 33 UE34 34 UE35 35 UE36 36 UE37 37 UE38 38 UE39 39 UE40 40 UE41 41 UE42 42 UE43 43 UE44 44 UE45 45 UE46 46 UE47 47 UE48 48 UE49 49 UE50 50 UE51 51 UE52 52 UE53 53 UE54 54 UE55 55 UE56 56 UE57 57 UE58 58 UE59 59 UE60 60 UE61 61 UE62 62 UE63 63 UE64 64 UE65 65 UE66 66 UE67 67 UE68 68 UE69 69 UE70 70 UE71 71 UE72 72 UE73 73 UE74 74 UE75 75 UE76 76 UE77 77 UE78 78 UE79 79"
*.cCU_UE3.labelsToGateIndices = "UE0 0 UE1 1 UE2 2 UE3 3 UE4 4 UE5 5 UE6 6 UE7 7 UE8 8 UE9 9 UE10 10 UE11 11 UE12 12 UE13 13 UE14 14 UE15 15 UE16 16 UE17 17 UE18 18 UE19 19 UE20 20 UE21 21 UE22 22 UE23 23 UE24 24 UE25 25 UE26 26 UE27 27 UE28 28 UE29 29 UE30 30 UE31 31 UE32 32 UE33 33 UE34 34 UE35 35 UE36 36 UE37 37 UE38 38 UE39 39 UE40 40 UE41 41 UE42 42 UE43 43 UE44 44 UE45 45 UE46 46 UE47 47 UE48 48 UE49 49 UE50 50 UE51 51 UE52 52 UE53 53 UE54 54 UE55 55 UE56 56 UE57 57 UE58 58 UE59 59 UE60 60 UE61 61 UE62 62 UE63 63 UE64 64 UE65 65 UE66 66 UE67 67 UE68 68 UE69 69 UE70 70 UE71 71 UE72 72 UE73 73 UE74 74 UE75 75 UE76 76 UE77 77 UE78 78 UE79 79"
*.cCU_UE5.labelsToGateIndices = "UE0 0 UE1 1 UE2 2 UE3 3 UE4 4 UE5 5 UE6 6 UE7 7 UE8 8 UE9 9 UE10 10 UE11 11 UE12 12 UE13 13 UE14 14 UE15 15 UE16 16 UE17 17 UE18 18 UE19 19 UE20 20 UE21 21 UE22 22 UE23 23 UE24 24 UE25 25 UE26 26 UE27 27 UE28 28 UE29 29 UE30 30 UE31 31 UE32 32 UE33 33 UE34 34 UE35 35 UE36 36 UE37 37 UE38 38 UE39 39 UE40 40 UE41 41 UE42 42 UE43 43 UE44 44 UE45 45 UE46 46 UE47 47 UE48 48 UE49 49 UE50 50 UE51 51 UE52 52 UE53 53 UE54 54 UE55 55 UE56 56 UE57 57 UE58 58 UE59 59 UE60 60 UE61 61 UE62 62 UE63 63 UE64 64 UE65 65 UE66 66 UE67 67 UE68 68 UE69 69 UE70 70 UE71 71 UE72 72 UE73 73 UE74 74 UE75 75 UE76 76 UE77 77 UE78 78 UE79 79"
*.cCU_UE7.labelsToGateIndices = "UE0 0 UE1 1 UE2 2 UE3 3 UE4 4 UE5 5 UE6 6 UE7 7 UE8 8 UE9 9 UE10 10 UE11 11 UE12 12 UE13 13 UE14 14 UE15 15 UE16 16 UE17 17 UE18 18 UE19 19 UE20 20 UE21 21 UE22 22 UE23 23 UE24 24 UE25 25 UE26 26 UE27 27 UE28 28 UE29 29 UE30 30 UE31 31 UE32 32 UE33 33 UE34 34 UE35 35 UE36 36 UE37 37 UE38 38 UE39 39 UE40 40 UE41 41 UE42 42 UE43 43 UE44 44 UE45 45 UE46 46 UE47 47 UE48 48 UE49 49 UE50 50 UE51 51 UE52 52 UE53 53 UE54 54 UE55 55 UE56 56 UE57 57 UE58 58 UE59 59 UE60 60 UE61 61 UE62 62 UE63 63 UE64 64 UE65 65 UE66 66 UE67 67 UE68 68 UE69 69 UE70 70 UE71 71 UE72 72 UE73 73 UE74 74 UE75 75 UE76 76 UE77 77 UE78 78 UE79 79"

##*.L{1,3}du*.packetFilters = [expr(totalLength == 128B)]
#*.L{1,3}du*.packetFilters = [expr(totalLength == 978B)]
*.L1du1.labels = "urllc-vdu1-du1"
*.L3du1.labels = "urllc-vdu2-du1"
*.L1du2.labels = "urllc-vdu1-du2"
*.L3du2.labels = "urllc-vdu2-du2"
##*.L{2,4}du*.packetFilters = [expr(totalLength == 1500B)]
#*.L{2,4}du*.packetFilters = [expr(totalLength == 10763B)]
*.L2du1.labels = "embb-vdu1-du1"
*.L4du1.labels = "embb-vdu2-du1"
*.L2du2.labels = "embb-vdu1-du2"
*.L4du2.labels = "embb-vdu2-du2"
#*.sch1*.weights = "2 1"
#*.sch2*.weights = "2 1"
#*.scheth*.weights = "2 1 2 1"
#*.schR1.weights = "2 1 2 1"
#*.schR2.weights = "2 1 2 1"
#*.schR3.weights = "2 1 2 1 2 1 2 1"
#*.schR4.weights = "2 1 2 1 2 1 2 1"
#*.sch1*.weights = "1 1"
#*.sch2*.weights = "1 1"
#*.scheth*.weights = "1 1 1 1"
#*.schR1.weights = "1 1 1 1"
#*.schR2.weights = "1 1 1 1"
#*.schR3.weights = "1 1 1 1 1 1 1 1"
*.schR4.weights = "1 1 1 1 1 1 1 1"
#*.S*du*.processingTime = 0s
#*.S*du*.processingBitrate = 1.2Gbps #tx maior que chegada; usar 65536bps para 32 e 64B
#*.Seth*.processingTime = 0s
#*.Seth*.processingBitrate = 8Gbps #tx maior que chegada; usar 65536bps para 32 e 64B
*.SR*.processingTime = 0s
*.SR*.processingBitrate = 100000 Gbps #tx maior que chegada; usar 65536bps para 32 e 64B
#*.cdu1.labelsToGateIndices = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3"
#*.cdu2.labelsToGateIndices = "urllc-vdu1-du2 0 embb-vdu1-du2 1 urllc-vdu2-du2 2 embb-vdu2-du2 3"
#*.cR1.labelsToGateIndices  = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3"
#*.cR2.labelsToGateIndices  = "urllc-vdu1-du2 0 embb-vdu1-du2 1 urllc-vdu2-du2 2 embb-vdu2-du2 3"
#*.cR3.labelsToGateIndices  = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3 urllc-vdu1-du2 4 embb-vdu1-du2 5 urllc-vdu2-du2 6 embb-vdu2-du2 7"
*.cR4.labelsToGateIndices  = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3 urllc-vdu1-du2 4 embb-vdu1-du2 5 urllc-vdu2-du2 6 embb-vdu2-du2 7"
*.cCU.labelsToGateIndices  = "urllc-vdu1-du1 0 embb-vdu1-du1 1 urllc-vdu2-du1 2 embb-vdu2-du1 3 urllc-vdu1-du2 4 embb-vdu1-du2 5 urllc-vdu2-du2 6 embb-vdu2-du2 7"

